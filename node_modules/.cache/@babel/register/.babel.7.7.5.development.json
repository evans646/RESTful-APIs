{
  "{\"sourceRoot\":\"/Users/evans/Desktop/RESTful-Routes-Demo/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/evans/Desktop/RESTful-Routes-Demo\",\"filename\":\"/Users/evans/Desktop/RESTful-Routes-Demo/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/evans/Desktop/RESTful-Routes-Demo\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/evans/Desktop/RESTful-Routes-Demo/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/evans/Desktop/RESTful-Routes-Demo",
      "filename": "/Users/evans/Desktop/RESTful-Routes-Demo/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/evans/Desktop/RESTful-Routes-Demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/evans/Desktop/RESTful-Routes-Demo/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/evans/Desktop/RESTful-Routes-Demo/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/evans/Desktop/RESTful-Routes-Demo/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _methodOverride = _interopRequireDefault(require(\"method-override\"));\n\nvar _uuid = require(\"uuid\");\n\nrequire(\"ejs\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _readOnlyError(name) { throw new TypeError(\"\\\"\" + name + \"\\\" is read-only\"); }\n\nvar app = (0, _express[\"default\"])();\n(0, _uuid.v4)(); // render html, helps to embed javascript directory inside html\n\n// for parsing application json/x-www-form-urlencoded\napp.use(_express[\"default\"].json());\napp.use(_express[\"default\"].urlencoded({\n  extended: true\n}));\napp.use((0, _methodOverride[\"default\"])('_method')); //to render static assets css/js\n\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, 'public')));\napp.set('view engine', 'ejs');\napp.set('views', _path[\"default\"].join(__dirname, '../views'));\nvar port = 8080;\nvar comments = [{\n  id: (0, _uuid.v4)(),\n  username: 'TRAVELER1-EVANS',\n  comment: 'Wow this place is very beautiful'\n}, {\n  id: (0, _uuid.v4)(),\n  username: 'TRAVELER2-KAREN',\n  comment: 'Lol that is actually the way to dive'\n}, {\n  id: (0, _uuid.v4)(),\n  username: 'TRAVELER3-THOMAS',\n  comment: 'hmmm i was thinking of going on a vacation next year and this place is list!!!'\n}, {\n  id: (0, _uuid.v4)(),\n  username: 'TRAVELER4-KAZIAH',\n  comment: 'I visited this place a while back but it was not as beautiful as it is now'\n}]; //Show all comments\n\napp.get('/comments', function (_req, res) {\n  res.render('index', {\n    comments: comments\n  });\n}); //New comments\n\napp.get('/comments/new', function (_response, res) {\n  res.render('new');\n}); // redirecting New comments \n\napp.post('/comments', function (req, res) {\n  var _req$body = req.body,\n      username = _req$body.username,\n      comment = _req$body.comment;\n  comments.push({\n    username: username,\n    comment: comment,\n    id: (0, _uuid.v4)()\n  });\n  console.log(req.body);\n  res.redirect(\"/comments\");\n}); //New comments\n\napp.get('/comments/:id', function (req, res) {\n  var id = req.params.id;\n  var comment = comments.find(function (c) {\n    return c.id === id;\n  });\n  res.render('details', {\n    comment: comment\n  });\n});\napp.get('/comments/:id/edit', function (req, res) {\n  var id = req.params.id;\n  var comment = comments.find(function (c) {\n    return c.id === id;\n  });\n  res.render('edit', {\n    comment: comment\n  });\n});\napp.patch('/comments/:id', function (req, res) {\n  var id = req.params.id;\n  var newcommentTEXT = req.body.comment;\n  var findcomment = comments.find(function (c) {\n    return c.id === id;\n  });\n  findcomment.comment = newcommentTEXT;\n  res.redirect('/comments');\n});\napp[\"delete\"]('/comments/:id', function (req, res) {\n  var id = req.params.id;\n  comments.filter(function (c) {\n    return c.id !== id;\n  }), _readOnlyError(\"comments\");\n  res.redirect('/comments');\n});\napp.listen(port, function () {\n  console.log(\"Server is listening on port \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsImV4cHJlc3MiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwicGF0aCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJzZXQiLCJwb3J0IiwiY29tbWVudHMiLCJpZCIsInVzZXJuYW1lIiwiY29tbWVudCIsImdldCIsIl9yZXEiLCJyZXMiLCJyZW5kZXIiLCJfcmVzcG9uc2UiLCJwb3N0IiwicmVxIiwiYm9keSIsInB1c2giLCJjb25zb2xlIiwibG9nIiwicmVkaXJlY3QiLCJwYXJhbXMiLCJmaW5kIiwiYyIsInBhdGNoIiwibmV3Y29tbWVudFRFWFQiLCJmaW5kY29tbWVudCIsImZpbHRlciIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFHQTs7QUFFQTs7QUFFQTs7QUFJQTs7Ozs7O0FBVkEsSUFBTUEsR0FBRyxHQUFHLDBCQUFaO0FBT0EsZ0IsQ0FFQTs7QUFHQTtBQUNBQSxHQUFHLENBQUNDLEdBQUosQ0FBUUMsb0JBQVFDLElBQVIsRUFBUjtBQUNBSCxHQUFHLENBQUNDLEdBQUosQ0FBUUMsb0JBQVFFLFVBQVIsQ0FBbUI7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBbkIsQ0FBUjtBQUNBTCxHQUFHLENBQUNDLEdBQUosQ0FBUSxnQ0FBZSxTQUFmLENBQVIsRSxDQUVBOztBQUNBRCxHQUFHLENBQUNDLEdBQUosQ0FBUUMsOEJBQWVJLGlCQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsUUFBckIsQ0FBZixDQUFSO0FBR0FSLEdBQUcsQ0FBQ1MsR0FBSixDQUFRLGFBQVIsRUFBdUIsS0FBdkI7QUFDQVQsR0FBRyxDQUFDUyxHQUFKLENBQVEsT0FBUixFQUFpQkgsaUJBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFvQixVQUFwQixDQUFqQjtBQUVBLElBQU1FLElBQUksR0FBRyxJQUFiO0FBRUEsSUFBTUMsUUFBUSxHQUFFLENBQUU7QUFDZEMsRUFBQUEsRUFBRSxFQUFFLGVB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Q0MsSUFBSixDQUFTUixPQUEvQjtBQUNBLE1BQU1rQixXQUFXLEdBQUdyQixRQUFRLENBQUNpQixJQUFULENBQWMsVUFBQUMsQ0FBQztBQUFBLFdBQUlBLENBQUMsQ0FBQ2pCLEVBQUYsS0FBUUEsRUFBWjtBQUFBLEdBQWYsQ0FBcEI7QUFDQW9CLEVBQUFBLFdBQVcsQ0FBQ2xCLE9BQVosR0FBdUJpQixjQUF2QjtBQUNBZCxFQUFBQSxHQUFHLENBQUNTLFFBQUosQ0FBYSxXQUFiO0FBQ0QsQ0FORDtBQVFBMUIsR0FBRyxVQUFILENBQVcsZUFBWCxFQUEyQixVQUFDcUIsR0FBRCxFQUFLSixHQUFMLEVBQVc7QUFDcEMsTUFBTUwsRUFBTixHQUFXUyxHQUFHLENBQUNNLE1BQWYsQ0FBTWYsRUFBTjtBQUNVRCxFQUFBQSxRQUFRLENBQUNzQixNQUFULENBQWdCLFVBQUFKLENBQUM7QUFBQSxXQUFJQSxDQUFDLENBQUNqQixFQUFGLEtBQVFBLEVBQVo7QUFBQSxHQUFqQixDQUFWO0FBQ0FLLEVBQUFBLEdBQUcsQ0FBQ1MsUUFBSixDQUFhLFdBQWI7QUFDRCxDQUpEO0FBUUExQixHQUFHLENBQUNrQyxNQUFKLENBQVd4QixJQUFYLEVBQWdCLFlBQUs7QUFDakJjLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUix1Q0FBMkNmLElBQTNDO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZXZhbnMvRGVza3RvcC9SRVNUZnVsLVJvdXRlcy1EZW1vL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyIvL3RvIHN0YXJ0IHRoZSBzZXJ2ZXIgYW5kICBjb25maWd1cmUgcm91dGVzIFxuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuLy9zbyB3ZSBjYW4gc2VuZCBwYXRjaCBvciBwdXQgcmVxdWVzdHMgXG5pbXBvcnQgbWV0aG9kT3ZlcnJpZGUgZnJvbSAnbWV0aG9kLW92ZXJyaWRlJztcbi8vdG8gZ2VuZXJhdGUgcmFuZG9tIGlkcyBcbmltcG9ydCB7IHY0IGFzIHV1aWR2NCB9IGZyb20gJ3V1aWQnO1xudXVpZHY0KCk7XG5cbi8vIHJlbmRlciBodG1sLCBoZWxwcyB0byBlbWJlZCBqYXZhc2NyaXB0IGRpcmVjdG9yeSBpbnNpZGUgaHRtbFxuaW1wb3J0ICdlanMnO1xuXG4vLyBmb3IgcGFyc2luZyBhcHBsaWNhdGlvbiBqc29uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKTsgXG5hcHAudXNlKG1ldGhvZE92ZXJyaWRlKCdfbWV0aG9kJykpO1xuXG4vL3RvIHJlbmRlciBzdGF0aWMgYXNzZXRzIGNzcy9qc1xuYXBwLnVzZShleHByZXNzLnN0YXRpYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAncHVibGljJykpKTtcblxuXG5hcHAuc2V0KCd2aWV3IGVuZ2luZScsICdlanMnKTtcbmFwcC5zZXQoJ3ZpZXdzJywgcGF0aC5qb2luKF9fZGlybmFtZSwnLi4vdmlld3MnKSk7XG5cbmNvbnN0IHBvcnQgPSA4MDgwO1xuXG5jb25zdCBjb21tZW50cyA9WyB7XG4gICAgaWQ6IHV1aWR2NCgpLFxuICAgIHVzZXJuYW1lOiAnVFJBVkVMRVIxLUVWQU5TJyxcbiAgICBjb21tZW50OidXb3cgdGhpcyBwbGFjZSBpcyB2ZXJ5IGJlYXV0aWZ1bCdcbiB9LFxuICAge1xuICAgIGlkOiB1dWlkdjQoKSxcbiAgICB1c2VybmFtZTogJ1RSQVZFTEVSMi1LQVJFTicsXG4gICAgY29tbWVudDonTG9sIHRoYXQgaXMgYWN0dWFsbHkgdGhlIHdheSB0byBkaXZlJ1xuIH0sXG4gICB7XG4gICAgaWQ6IHV1aWR2NCgpLFxuICAgIHVzZXJuYW1lOiAnVFJBVkVMRVIzLVRIT01BUycsXG4gICAgY29tbWVudDonaG1tbSBpIHdhcyB0aGlua2luZyBvZiBnb2luZyBvbiBhIHZhY2F0aW9uIG5leHQgeWVhciBhbmQgdGhpcyBwbGFjZSBpcyBsaXN0ISEhJ1xuIH0sXG4gICB7XG4gICAgaWQ6IHV1aWR2NCgpLFxuICAgIHVzZXJuYW1lOiAnVFJBVkVMRVI0LUtBWklBSCcsXG4gICAgY29tbWVudDonSSB2aXNpdGVkIHRoaXMgcGxhY2UgYSB3aGlsZSBiYWNrIGJ1dCBpdCB3YXMgbm90IGFzIGJlYXV0aWZ1bCBhcyBpdCBpcyBub3cnXG4gfVxuXVxuXG4vL1Nob3cgYWxsIGNvbW1lbnRzXG5hcHAuZ2V0KCcvY29tbWVudHMnLChfcmVxLHJlcyk9PntcbiAgcmVzLnJlbmRlcignaW5kZXgnLHtjb21tZW50czpjb21tZW50c30pXG59KVxuXG4vL05ldyBjb21tZW50c1xuYXBwLmdldCgnL2NvbW1lbnRzL25ldycsKF9yZXNwb25zZSxyZXMpPT57XG4gIHJlcy5yZW5kZXIoJ25ldycpXG59KVxuXG5cbi8vIHJlZGlyZWN0aW5nIE5ldyBjb21tZW50cyBcbmFwcC5wb3N0KCcvY29tbWVudHMnLChyZXEscmVzKT0+e1xuIGNvbnN0IHt1c2VybmFtZSwgY29tbWVudH09IHJlcS5ib2R5XG4gY29tbWVudHMucHVzaCh7dXNlcm5hbWUsY29tbWVudCxpZDp1dWlkdjQoKX0pXG4gY29uc29sZS5sb2cocmVxLmJvZHkpXG5yZXMucmVkaXJlY3QoXCIvY29tbWVudHNcIilcbn0pO1xuXG5cbi8vTmV3IGNvbW1lbnRzXG5hcHAuZ2V0KCcvY29tbWVudHMvOmlkJywocmVxLHJlcykgPT57XG4gIGNvbnN0e2lkfSA9cmVxLnBhcmFtcztcbiAgY29uc3QgY29tbWVudCA9IGNvbW1lbnRzLmZpbmQoYyA9PiBjLmlkID09PWlkKTtcbiAgcmVzLnJlbmRlcignZGV0YWlscycse2NvbW1lbnR9KTtcbn0pXG5cbmFwcC5nZXQoJy9jb21tZW50cy86aWQvZWRpdCcsKHJlcSxyZXMpPT57XG4gIGNvbnN0e2lkfSA9cmVxLnBhcmFtcztcbiAgY29uc3QgY29tbWVudCA9IGNvbW1lbnRzLmZpbmQoYyA9PiBjLmlkID09PWlkKTtcbiAgcmVzLnJlbmRlcignZWRpdCcse2NvbW1lbnR9KVxufSlcblxuXG5hcHAucGF0Y2goJy9jb21tZW50cy86aWQnLChyZXEscmVzKT0+e1xuICBjb25zdHtpZH0gPXJlcS5wYXJhbXM7XG4gIGNvbnN0IG5ld2NvbW1lbnRURVhUPSByZXEuYm9keS5jb21tZW50XG4gIGNvbnN0IGZpbmRjb21tZW50ID0gY29tbWVudHMuZmluZChjID0+IGMuaWQgPT09aWQpO1xuICBmaW5kY29tbWVudC5jb21tZW50ID0gIG5ld2NvbW1lbnRURVhUO1xuICByZXMucmVkaXJlY3QoJy9jb21tZW50cycpXG59KTtcblxuYXBwLmRlbGV0ZSgnL2NvbW1lbnRzLzppZCcsKHJlcSxyZXMpPT57XG4gIGNvbnN0e2lkfSA9cmVxLnBhcmFtcztcbiAgY29tbWVudHMgPWNvbW1lbnRzLmZpbHRlcihjID0+IGMuaWQgIT09aWQpO1xuICByZXMucmVkaXJlY3QoJy9jb21tZW50cycpXG59KVxuXG5cblxuYXBwLmxpc3Rlbihwb3J0LCgpID0+e1xuICAgIGNvbnNvbGUubG9nKGBTZXJ2ZXIgaXMgbGlzdGVuaW5nIG9uIHBvcnQgJHtwb3J0fWApXG59KTtcblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "express",
        "json",
        "urlencoded",
        "extended",
        "path",
        "join",
        "__dirname",
        "set",
        "port",
        "comments",
        "id",
        "username",
        "comment",
        "get",
        "_req",
        "res",
        "render",
        "_response",
        "post",
        "req",
        "body",
        "push",
        "console",
        "log",
        "redirect",
        "params",
        "find",
        "c",
        "patch",
        "newcommentTEXT",
        "findcomment",
        "filter",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/evans/Desktop/RESTful-Routes-Demo/src/",
      "sourcesContent": [
        "//to start the server and  configure routes \nimport express from 'express';\nconst app = express();\n\nimport path from 'path';\n//so we can send patch or put requests \nimport methodOverride from 'method-override';\n//to generate random ids \nimport { v4 as uuidv4 } from 'uuid';\nuuidv4();\n\n// render html, helps to embed javascript directory inside html\nimport 'ejs';\n\n// for parsing application json/x-www-form-urlencoded\napp.use(express.json());\napp.use(express.urlencoded({ extended: true })); \napp.use(methodOverride('_method'));\n\n//to render static assets css/js\napp.use(express.static(path.join(__dirname, 'public')));\n\n\napp.set('view engine', 'ejs');\napp.set('views', path.join(__dirname,'../views'));\n\nconst port = 8080;\n\nconst comments =[ {\n    id: uuidv4(),\n    username: 'TRAVELER1-EVANS',\n    comment:'Wow this place is very beautiful'\n },\n   {\n    id: uuidv4(),\n    username: 'TRAVELER2-KAREN',\n    comment:'Lol that is actually the way to dive'\n },\n   {\n    id: uuidv4(),\n    username: 'TRAVELER3-THOMAS',\n    comment:'hmmm i was thinking of going on a vacation next year and this place is list!!!'\n },\n   {\n    id: uuidv4(),\n    username: 'TRAVELER4-KAZIAH',\n    comment:'I visited this place a while back but it was not as beautiful as it is now'\n }\n]\n\n//Show all comments\napp.get('/comments',(_req,res)=>{\n  res.render('index',{comments:comments})\n})\n\n//New comments\napp.get('/comments/new',(_response,res)=>{\n  res.render('new')\n})\n\n\n// redirecting New comments \napp.post('/comments',(req,res)=>{\n const {username, comment}= req.body\n comments.push({username,comment,id:uuidv4()})\n console.log(req.body)\nres.redirect(\"/comments\")\n});\n\n\n//New comments\napp.get('/comments/:id',(req,res) =>{\n  const{id} =req.params;\n  const comment = comments.find(c => c.id ===id);\n  res.render('details',{comment});\n})\n\napp.get('/comments/:id/edit',(req,res)=>{\n  const{id} =req.params;\n  const comment = comments.find(c => c.id ===id);\n  res.render('edit',{comment})\n})\n\n\napp.patch('/comments/:id',(req,res)=>{\n  const{id} =req.params;\n  const newcommentTEXT= req.body.comment\n  const findcomment = comments.find(c => c.id ===id);\n  findcomment.comment =  newcommentTEXT;\n  res.redirect('/comments')\n});\n\napp.delete('/comments/:id',(req,res)=>{\n  const{id} =req.params;\n  comments =comments.filter(c => c.id !==id);\n  res.redirect('/comments')\n})\n\n\n\napp.listen(port,() =>{\n    console.log(`Server is listening on port ${port}`)\n});\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1638793442120
  }
}